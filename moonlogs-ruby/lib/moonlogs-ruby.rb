=begin
#Moonlogs

#Moonlogs API

OpenAPI spec version: 0.5.7
Contact: shalpack@gmail.com
Generated by: https://github.com/swagger-api/swagger-codegen.git
Swagger Codegen version: 3.0.52
=end

# Common files
require 'moonlogs-ruby/api_client'
require 'moonlogs-ruby/api_error'
require 'moonlogs-ruby/version'
require 'moonlogs-ruby/configuration'

# Models
require 'moonlogs-ruby/models/api_token'
require 'moonlogs-ruby/models/credentials'
require 'moonlogs-ruby/models/inline_response_200'
require 'moonlogs-ruby/models/inline_response_200_1'
require 'moonlogs-ruby/models/inline_response_200_10'
require 'moonlogs-ruby/models/inline_response_200_11'
require 'moonlogs-ruby/models/inline_response_200_12'
require 'moonlogs-ruby/models/inline_response_200_13'
require 'moonlogs-ruby/models/inline_response_200_2'
require 'moonlogs-ruby/models/inline_response_200_3'
require 'moonlogs-ruby/models/inline_response_200_4'
require 'moonlogs-ruby/models/inline_response_200_5'
require 'moonlogs-ruby/models/inline_response_200_6'
require 'moonlogs-ruby/models/inline_response_200_7'
require 'moonlogs-ruby/models/inline_response_200_8'
require 'moonlogs-ruby/models/inline_response_200_9'
require 'moonlogs-ruby/models/level'
require 'moonlogs-ruby/models/meta'
require 'moonlogs-ruby/models/one_of_record_level'
require 'moonlogs-ruby/models/one_of_user_role'
require 'moonlogs-ruby/models/record'
require 'moonlogs-ruby/models/role'
require 'moonlogs-ruby/models/schema'
require 'moonlogs-ruby/models/schema_field'
require 'moonlogs-ruby/models/schema_kind'
require 'moonlogs-ruby/models/schema_search'
require 'moonlogs-ruby/models/session'
require 'moonlogs-ruby/models/tag'
require 'moonlogs-ruby/models/user'

# APIs
require 'moonlogs-ruby/api/default_api'

module MoonlogsRuby
  class << self
    # Customize default settings for the SDK using block.
    #   MoonlogsRuby.configure do |config|
    #     config.username = "xxx"
    #     config.password = "xxx"
    #   end
    # If no block given, return the default Configuration object.
    def configure
      if block_given?
        yield(Configuration.default)
      else
        Configuration.default
      end
    end
  end
end
